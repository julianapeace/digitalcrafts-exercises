*******************************
Javascript
*******************************
1. node.js is updated very often. nvm is a javascript version control manager.
nvm ls-remote --lts (view all the versios of lts that you may install)
nvm use 6.11.3 (use this to switch versions if you have mutliple versions)

now that it is installed: type in node to access node.js like python.

2. Nesh is like ipython for javascript.
Now we don't need to worry about virtual environments because node came out later. They wonn't version break on you.
pretty lowerful. can use tab to autofill. try typing in "name." with the period! name is an array of names. It's cool, lists all the functions you could use.
3. Weird shit about javascript:
  in javascript, there are no int and float. they're all numbers.
  2 == '2' is true (unlike python!) why? normal operators in js will convert them to the same thing. Its called type conversion.
  console.log('hello') is like your print statement
    if we want to bump something up, we can do console.error (it gets formatted red in the browser)
    console.warn (gets nice yellow formatting)
    console.table(prints out list of data formatted into a table)
4. tick marks "``"
  console.log(`hello ${name}`);
5. variables:
  var name = 'Julie'
  let name = 'Julie'
  const PI = 3.15
6. python was built for the backend first. If you wnt to input in JS, it's hard to do. It's not meant to be run from the terminal. That's why node appeared.
7. map is like a dictionary.
8. typeof(3.4) to like type()
9. type conversion
  parseInt, parseFloat
  js has a much smaller math library
10. foreach
  this is the newer version of the for loop
11. eat all the arguments
  arguments is like *args in python
  js barks less errors, breaks less intuitively.
12. touch addition.js
  nano into it
  type your code in there like function add(blah blha) add(2,3)
  node addition.js

  *****************************
  objects
  *****************************
  1. objects in js are used like dictionaries. access with keys.
  2. js objects do not blow up if first level is undefined. This is a good check for that. for example: person.last_name || 'Bailey'
  This is saying, if the first thing is undefined, rturn the default.
  the second level will blow up: person.last_name.first_name
  3.anonymous functions are THROW-AWAY use it once functions. created without names.
  like name = [1,2,4,8]
  name.forEach(function (num) {console.log(num)})
  is the same as
  function num_print(num){console.log(num)} name.forEach(num_print)
  4. map() gets the data and iterate it
  5. filter() filters thru the data to get what you want
  6. 4 and 5 are used a lot in data science applications, processing data, etc.
  7. the sort function works weird with int arrays. need to write:
  a.sort(function(x,y){
  if (x>y){return 1}
  else if (x<y){return -1}
  return 0;
  })
  otherwise, sort will convert int to string and sort by binary string type
